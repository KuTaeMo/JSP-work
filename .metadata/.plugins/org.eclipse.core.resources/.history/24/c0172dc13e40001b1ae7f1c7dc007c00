import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import config.DBConnection;

public class MainApp {
	
	public static void 추가(int id) {
		String sql="INSERT INTO test1(id) VALUES (?)";
		Connection conn=DBConnection.getInstance();
		//인터페이스가 적용되어 있는 버퍼
		try {
			PreparedStatement pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1, id);
			int result=pstmt.executeUpdate(); // 변경된 row count를 리턴, - 값은 오류시에만 리턴
			System.out.println("result : "+result);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void 삭제(int id) {
		String sql="DELETE FROM test1 WHERE id=?";
		Connection conn=DBConnection.getInstance();
		//인터페이스가 적용되어 있는 버퍼
		try {
			PreparedStatement pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1, id);
			int result=pstmt.executeUpdate(); // 변경된 row count를 리턴, - 값은 오류시에만 리턴
			System.out.println("result : "+result);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void 변경(int id,int id2) {
		String sql="UPDATE test1 SET id=? WHERE id=?";
		Connection conn=DBConnection.getInstance();
		//인터페이스가 적용되어 있는 버퍼
		try {
			PreparedStatement pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1, id);
			pstmt.setInt(2, id2);
			int result=pstmt.executeUpdate(); // 변경된 row count를 리턴, - 값은 오류시에만 리턴
			System.out.println("result : "+result);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		//추가(9);
		//삭제(1);
		변경(8,1);
	}
}
